View(AA)
AA<- g %*% aa / 99
View(test.pheno)
View(g)
AA<- t(aa) %*% g
a <- unlist(A)
aa <- matrix(a, nrow = 1000, ncol = 1)
AA<- t(aa) %*% g
# MSE = Var+bias^2. From the prompt, data is centered so bias = 0.
g<- as.matrix(test.geno)
a <- unlist(A)
aa <- matrix(a, nrow = 1000, ncol = 1)
AA<- aa %*% g
is.matrix(train.geno)
#problem 3.2
pheno.geno <- read.csv("gwas.pheno", sep = " ")
gwas.geno <- read.csv("gwas.geno", sep = " ")
#problem 3.2
pheno.geno <- read.csv("gwas.pheno", sep = " ")
gwas.geno <- read.csv("gwas.geno", sep = " ")
setwd("C:/Users/ericy/OneDrive/Documents/CM124 PS2/data/PS2_Q3_data")
#problem 3.2
pheno.geno <- read.csv("gwas.pheno", sep = " ")
gwas.geno <- read.csv("gwas.geno", sep = " ")
rm(A,aa,AA,B,bb,BB,C,cc,CC,D,dd,DD,g,inverse,temp,test.geno,test.pheno,train.geno,train.pheno)
rm(a,c,b,d,j,lamb,lamb1,lamb2,lamb3,lamb4)
View(gwas.geno)
View(pheno.geno)
#problem 3.4
second<- gwas.geno(,258)
third<- gwas.geno(,119)
fourth<- gwas.geno(,43)
#problem 3.4
second<- gwas.geno[,258]
third<- gwas.geno[,119]
fourth<- gwas.geno[,43]
View(gwas.geno)
plot(second,Pheno.geno[,2])
plot(second,pheno.geno[,2])
plot(second,pheno.geno[,2],xlab = "258th SNP genotype", ylab = "2nd phenotype")
fourth<- gwas.geno[,43]
plot(third,pheno.geno[,3],xlab = "119th SNP genotype", ylab = "3rd phenotype")
plot(fourth,pheno.geno[,4],xlab = "43th SNP genotype", ylab = "4th phenotype")
plot(second,pheno.geno[,2],xlab = "258th SNP genotype", ylab = "2nd phenotype")
plot(fourth,pheno.geno[,4],xlab = "43th SNP genotype", ylab = "4th phenotype")
plot(third,pheno.geno[,3],xlab = "119th SNP genotype", ylab = "3rd phenotype")
fourth
plot(third,pheno.geno[,3],xlab = "119th SNP genotype", ylab = "3rd phenotype")
plot(fourth,pheno.geno[,4],xlab = "43th SNP genotype", ylab = "4th phenotype")
pheno.geno[,4]
#problem 3.4
second<- gwas.geno[,119]
#problem 3.4
second<- gwas.geno[,119]
zero<-list()
one<-list()
two<-list()
j = 1
k = 1
l = 1
for(i in 1:499){
if (second[i] = 0){
for(i in 1:499){
if (second[i] == 0){
zero[j]<-pheno.geno[i,2]
j = j+1
}
else if (second[i] == 1){
one[k]<-pheno.geno[i,2]
k = k+1
}
else{
two<-pheno.geno[i,2]
l=l+1
}
}
two<-list()
j = 1
k = 1
l = 1
for(i in 1:499){
if (second[i] == 0){
zero[j]<-pheno.geno[i,2]
j = j+1
}
else if (second[i] == 1){
one[k]<-pheno.geno[i,2]
k = k+1
}
else{
two[l]<-pheno.geno[i,2]
l=l+1
}
}
for(i in 1:499){
if (second[i] == 0){
zero[j]<-pheno.geno[i,2]
j = j+1
}
else if (second[i] == 1){
one[k]<-pheno.geno[i,2]
k = k+1
}
else if (second[i] == 2){
two[l]<-pheno.geno[i,2]
l=l+1
}
}
j = 1
k = 1
l = 1
for(i in 1:499){
if (second[i] == 0){
zero[j]<-pheno.geno[i,2]
j = j+1
}
else if (second[i] == 1){
one[k]<-pheno.geno[i,2]
k = k+1
}
else if (second[i] == 2){
two[l]<-pheno.geno[i,2]
l=l+1
}
}
View(two)
View(zero)
View(one)
#problem 3.4
second<- gwas.geno[,119]
zero2<-list()
one2<-list()
two2<-list()
j = 1
k = 1
l = 1
for(i in 1:499){
if (second[i] == 0){
zero2[j]<-pheno.geno[i,2]
j = j+1
}
else if (second[i] == 1){
one2[k]<-pheno.geno[i,2]
k = k+1
}
else if (second[i] == 2){
two2[l]<-pheno.geno[i,2]
l=l+1
}
}
third<- gwas.geno[,119]
zero3<-list()
one3<-list()
two3<-list()
j = 1
k = 1
l = 1
for(i in 1:499){
if (third[i] == 0){
zero3[j]<-pheno.geno[i,3]
j = j+1
}
else if (third[i]==1){
one3[k]<-pheno.geno[i,3]
k = k+1
}
else if (third[i] == 2){
two3[l]<-pheno.geno[i,3]
l=l+1
}
}
fourth<- gwas.geno[,43]
zero4<-list()
one4<-list()
two4<-list()
j = 1
k = 1
l = 1
for(i in 1:499){
if (fourth[i] == 0){
zero4[j]<-pheno.geno[i,4]
j = j+1
}
else if (fourth[i] == 1){
one4[k]<-pheno.geno[i,4]
k = k+1
}
else if (fourth[i] == 2){
two4[l]<-pheno.geno[i,4]
l=l+1
}
}
rm (zero,one,two)
#problem 3.4
second<- gwas.geno[,258]
zero2<-list()
one2<-list()
two2<-list()
j = 1
k = 1
l = 1
for(i in 1:499){
if (second[i] == 0){
zero2[j]<-pheno.geno[i,2]
j = j+1
}
else if (second[i] == 1){
one2[k]<-pheno.geno[i,2]
k = k+1
}
else if (second[i] == 2){
two2[l]<-pheno.geno[i,2]
l=l+1
}
}
third<- gwas.geno[,119]
zero3<-list()
one3<-list()
two3<-list()
j = 1
k = 1
l = 1
for(i in 1:499){
if (third[i] == 0){
zero3[j]<-pheno.geno[i,3]
j = j+1
}
else if (third[i]==1){
one3[k]<-pheno.geno[i,3]
k = k+1
}
else if (third[i] == 2){
two3[l]<-pheno.geno[i,3]
l=l+1
}
}
fourth<- gwas.geno[,43]
zero4<-list()
one4<-list()
two4<-list()
j = 1
k = 1
l = 1
for(i in 1:499){
if (fourth[i] == 0){
zero4[j]<-pheno.geno[i,4]
j = j+1
}
else if (fourth[i] == 1){
one4[k]<-pheno.geno[i,4]
k = k+1
}
else if (fourth[i] == 2){
two4[l]<-pheno.geno[i,4]
l=l+1
}
}
boxplot(zero2)
geom_boxplot(zero2)
library(ggplot2)
geom_boxplot(zero2,0)
geom_boxplot(aes(x = 0,y = zero2))
ggplot(mtcars, aes(x=as.factor(cyl), y=mpg)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
xlab("cyl")
ggplot(aes(x = 0, y = zero2))+
+     geom_boxplot(fill="slateblue", alpha=0.2)
rlang::last_trace()
boxplot(zero2~0)
boxplot(zero2)
boxplot(pheno.geno[,2] ~ second)
boxplot(pheno.geno[,2]~second, xlab="genotype of 258th SNP", ylab = "2nd phenotype")
boxplot(pheno.geno[,3]~third, xlab="genotype of 119th SNP", ylab = "3rd phenotype")
boxplot(pheno.geno[,4]~fourth, xlab="genotype of 43th SNP", ylab = "4th phenotype")
boxplot(pheno.geno[,2]~second, xlab="genotype of 258th SNP", ylab = "2nd phenotype")
boxplot(pheno.geno[,3]~third, xlab="genotype of 119th SNP", ylab = "3rd phenotype")
boxplot(pheno.geno[,4]~fourth, xlab="genotype of 43th SNP", ylab = "4th phenotype")
boxplot(pheno.geno[,2]~second, xlab="genotype of 258th SNP", ylab = "2nd phenotype")
boxplot(pheno.geno[,3]~third, xlab="genotype of 119th SNP", ylab = "3rd phenotype")
boxplot(pheno.geno[,4]~fourth, xlab="genotype of 43th SNP", ylab = "4th phenotype")
View(zero3)
#problem 3.2
pheno.geno <- read.csv("gwas.pheno", sep = " ")
gwas.geno <- read.csv("gwas.geno", sep = " ")
overall_p <- function(my_model) { #extract p-value
f <- summary(my_model)$fstatistic
p <- pf(f[1],f[2],f[3],lower.tail=F)
attributes(p) <- NULL
return(p)
}
A <- list() # 1st column of phenotype vs genotypes
for (i in 1:ncol(gwas.geno)){
A[i] <- overall_p(lm(pheno.geno[,1] ~ gwas.geno[,i]))
}
B <- list()# 2nd column of phenotype vs genotypes
for (i in 1:ncol(gwas.geno)){
B[i] <- overall_p(lm(pheno.geno[,2] ~ gwas.geno[,i]))
}
C <- list()# 3rd column of phenotype vs genotypes
for (i in 1:ncol(gwas.geno)){
C[i] <- overall_p(lm(pheno.geno[,3] ~ gwas.geno[,i]))
}
D <- list()# 4th column of phenotype vs genotypes
for (i in 1:ncol(gwas.geno)){
D[i] <- overall_p(lm(pheno.geno[,4] ~ gwas.geno[,i]))
}
# determine threshold below FWER
for (j in 1:382){
if (A[j] <= 0.00013089005){
print(A[j])
}
else{
print('no')}
}
#problem 3.3
hist(unlist(A), breaks = 25)
hist(unlist(B), breaks = 25)
hist(unlist(C), breaks = 25)
hist(unlist(D), breaks = 25)
#problem 3.4
second<- gwas.geno[,258]
third<- gwas.geno[,119]
fourth<- gwas.geno[,43]
boxplot(pheno.geno[,2]~second, xlab="genotype of 258th SNP", ylab = "2nd phenotype")
boxplot(pheno.geno[,3]~third, xlab="genotype of 119th SNP", ylab = "3rd phenotype")
boxplot(pheno.geno[,4]~fourth, xlab="genotype of 43th SNP", ylab = "4th phenotype")
#problem 4.2
test.geno <- read.csv("ridge.test.geno", sep = " ")
train.geno <- read.csv("ridge.training.geno", sep = " ")
test.pheno <- read.csv("ridge.test.pheno")
train.pheno <- read.csv("ridge.training.pheno")
setwd("C:/Users/ericy/OneDrive/Documents/CM124 PS2/data/PS2_Q4_data")
#problem 4.2
test.geno <- read.csv("ridge.test.geno", sep = " ")
train.geno <- read.csv("ridge.training.geno", sep = " ")
test.pheno <- read.csv("ridge.test.pheno")
train.pheno <- read.csv("ridge.training.pheno")
#naming lambdas
lamb1 <- 0.001
lamb2 <- 2
lamb3 <- 5
lamb4 <- 8
#setting empty lists
A <- list()
B <- list()
C <- list()
D <- list()
#loops
for (j in 1:1000){
inverse <- solve(t(train.geno[,j]) %*% train.geno[,j] + lamb1 * diag(1))
A[j] <- inverse %*% t(train.geno[,j]) %*% train.pheno[,1]
}
for (j in 1:1000){
inverse <- solve(t(train.geno[,j]) %*% train.geno[,j] + lamb2 * diag(1))
B[j] <- inverse %*% t(train.geno[,j]) %*% train.pheno[,1]
}
for (j in 1:1000){
inverse <- solve(t(train.geno[,j]) %*% train.geno[,j] + lamb3 * diag(1))
C[j] <- inverse %*% t(train.geno[,j]) %*% train.pheno[,1]
}
for (j in 1:1000){
inverse <- solve(t(train.geno[,j]) %*% train.geno[,j] + lamb4 * diag(1))
D[j] <- inverse %*% t(train.geno[,j]) %*% train.pheno[,1]
}
# MSE = Var+bias^2. From the prompt, data is centered so bias = 0.
g<- as.matrix(test.geno)
a <- unlist(A)
aa <- matrix(a, nrow = 1000, ncol = 1)
for(g in 1:1000){
temp <- t(aa[g,1]) * test.geno[,g]
AA[g] <- temp
}
aa <- matrix(a, nrow = 1000, ncol = 1)
AA <- list()
for(g in 1:1000){
temp <- t(aa[g,1]) * test.geno[,g]
AA[g] <- temp
}
b <- unlist(B)
bb <- matrix(b, nrow = 1000, ncol = 1)
BB <- list()
for(g in 1:1000){
temp <- t(bb[g,1]) * test.geno[,g]
BB[g] <- temp
}
c <- unlist(C)
cc <- matrix(c, nrow = 1000, ncol = 1)
CC <- list()
for(g in 1:1000){
temp <- t(cc[g,1]) * test.geno[,g]
CC[g] <- temp
}
d <- unlist(D)
dd <- matrix(d, nrow = 1000, ncol = 1)
DD <- list()
for(g in 1:1000){
temp <- t(dd[g,1]) * test.geno[,g]
DD[g] <- temp
}
View(AA)
for(g in 1:1000){
temp <- test.geno[,g]  %*%  aa[g,1]
AA[g] <- temp
}
for(g in 1:1000){
temp <- test.geno[,g] * aa[g,1]
AA[g] <- temp
}
View(AA)
for(g in 1:1000){
temp <- test.geno[,g] * aa[g,1]
AA[g] <- temp
}
b <- unlist(B)
bb <- matrix(b, nrow = 1000, ncol = 1)
BB <- list()
for(g in 1:1000){
temp <- test.geno[,g]*bb[g,1]
BB[g] <- temp
}
c <- unlist(C)
cc <- matrix(c, nrow = 1000, ncol = 1)
CC <- list()
for(g in 1:1000){
temp <- test.geno[,g] * cc[g,1]
CC[g] <- temp
}
d <- unlist(D)
dd <- matrix(d, nrow = 1000, ncol = 1)
DD <- list()
for(g in 1:1000){
temp <- test.geno[,g] * dd[g,1]
DD[g] <- temp
}
MSE1<- list()
for (g in 1:99){
temp<- (AA[g] - test.pheno[g,1]) ** 2
MSE1[g] = temp
}
View(MSE1)
AA[1] -test.pheno[1,1]
MSE1<- list()
for (g in 1:99){
temp<- (AA[g] - test.pheno[g,1]) ^ 2
MSE1[g] = temp
}
sum(MSE1)
MSE2<- list()
for (g in 1:99){
temp<- (BB[g] - test.pheno[g,1])^ 2
MSE2[g] = temp
}
MSE3<- list()
for (g in 1:99){
temp<- (CC[g] - test.pheno[g,1]) ^ 2
MSE3[g] = temp
}
MSE4<- list()
for (g in 1:99){
temp<- (DD[g] - test.pheno[g,1]) ^ 2
MSE4[g] = temp
}
AA[1]
MSE1<- list()
for (g in 1:99){
temp<- (a[g] - test.pheno[g,1]) ^ 2
MSE1[g] = temp
}
View(MSE1)
sum(MSE1)
MSE2<- list()
for (g in 1:99){
temp<- (a[g] - test.pheno[g,1]) ^ 2
MSE1[g] = temp
}
sum(unlist(MSE1))
MSE1<- list()
for (g in 1:99){
temp<- (a[g] - test.pheno[g,1]) ^ 2
MSE1[g] = temp
}
RMSE1<- sum(unlist(MSE1)) / 99
MSE2<- list()
for (g in 1:99){
temp<- (b[g] - test.pheno[g,1])^ 2
MSE2[g] = temp
}
RMSE2<- sum(unlist(MSE2)) / 99
MSE3<- list()
for (g in 1:99){
temp<- (c[g] - test.pheno[g,1]) ^ 2
MSE3[g] = temp
}
RMSE3<- sum(unlist(MSE3)) / 99
MSE4<- list()
for (g in 1:99){
temp<- (d[g] - test.pheno[g,1]) ^ 2
MSE4[g] = temp
}
RMSE4<- sum(unlist(MSE4)) / 99
y<- c(MSE1,MSE2,MSE3,MSE4)
x<- c(lamb1,lamb2,lamb3,lamb4)
plot(x,y)
y<- c(RMSE1,RMSE2,RMSE3,RMSE4)
x<- c(lamb1,lamb2,lamb3,lamb4)
plot(x,y)
MSE<- c(RMSE1,RMSE2,RMSE3,RMSE4)
lambda<- c(lamb1,lamb2,lamb3,lamb4)
plot(x,y)
plot(MSE,lambda)
plot(lambda,MSE)
setwd("C:/Users/ericy/Downloads/Challenge1/Challenge")
